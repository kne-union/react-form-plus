{"version":3,"file":"static/js/196.adabbb45.chunk.js","mappings":"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","sources":["preset.js","App.js","bootstrap.js","../../README.md"],"sourcesContent":["import React from 'react';\nimport { preset as fetchPreset } from '@kne/react-fetch';\nimport { Spin, Empty, message } from 'antd';\nimport createAjax from '@kne/axios-fetch';\nimport { preset as remoteLoaderPreset } from '@kne/remote-loader';\n\nwindow.PUBLIC_URL = process.env.PUBLIC_URL;\n\n// url: 'https://registry.npmmirror.com',\n// tpl: '{{url}}/@kne-components%2f{{remote}}/{{version}}/files/build',\n\n// url: 'https://cdn.jsdelivr.net', tpl: '{{url}}/npm/@kne-components/{{remote}}@{{version}}/build'\n\nconst registry = {\n  url: 'https://uc.fatalent.cn', tpl: '{{url}}/packages/@kne-components/{{remote}}/{{version}}/build'\n};\n\nexport const globalInit = async () => {\n  const ajax = createAjax({\n    errorHandler: error => message.error(error)\n  });\n\n  const componentsCoreRemote = {\n    ...registry, remote: 'components-core', defaultVersion: '0.4.3'\n  };\n\n  remoteLoaderPreset({\n    remotes: {\n      default: componentsCoreRemote, 'components-core': componentsCoreRemote, 'components-iconfont': {\n        ...registry, remote: 'components-iconfont', defaultVersion: '0.2.1'\n      }, 'react-form-plus': process.env.NODE_ENV === 'development' ? {\n        remote: 'react-form-plus', url: '/', tpl: '{{url}}'\n      } : {\n        ...registry, remote: 'react-form-plus', defaultVersion: process.env.DEFAULT_VERSION\n      }\n    }\n  });\n\n\n  fetchPreset({\n    ajax, loading: <Spin delay={500}\n                         style={{\n                           position: 'absolute',\n                           left: '50%',\n                           padding: '10px',\n                           transform: 'translateX(-50%)'\n                         }} />, error: null, empty: <Empty />, transformResponse: (response) => {\n      const { data } = response;\n      response.data = {\n        code: data.code === 0 ? 200 : data.code, msg: data.msg, results: data.data\n      };\n      return response;\n    }\n  });\n\n  return {\n    ajax, enums: {}, apis: {}, themeToken: {\n      colorPrimary: '#4183F0'\n    }\n  };\n};\n","import { HashRouter } from \"react-router-dom\";\nimport createEntry from \"@kne/modules-dev/dist/create-entry.modern\";\nimport \"@kne/modules-dev/dist/create-entry.css\";\nimport readme from \"readme\";\n\nconst ExampleRoutes = createEntry.ExampleRoutes;\n\nconst App = ({ globalPreset, ...props }) => {\n  return (\n      <HashRouter>\n        <ExampleRoutes\n            {...props}\n            paths={[\n              {\n                key: \"components\",\n                path: \"/\",\n                title: \"首页\",\n              },\n            ]}\n            preset={globalPreset}\n            themeToken={globalPreset.themeToken}\n            readme={readme}\n            pageProps={{ menu: null }}\n        />\n      </HashRouter>\n  );\n};\n\nexport default App;\n","import { globalInit } from './preset';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst renderRoot = async (App) => {\n  const globalPreset = await globalInit();\n  return root.render(<App themeToken={globalPreset.themeToken} globalPreset={globalPreset} />);\n};\n\nrenderRoot(App);\n","import * as component_1 from '@kne/current-lib_react-form-plus';\nimport * as component_2 from '@kne/react-form-antd';\nimport '@kne/react-form-antd/dist/index.css';\nimport * as component_4 from 'antd';\nimport '@kne/react-form-antd/dist/index.css';\nimport '@kne/react-form-antd/dist/index.css';\nimport '@kne/react-form-antd/dist/index.css';\nconst readmeConfig = {\n    name: `react-form-plus`,\n    summary: `<h4>核心功能</h4>\n<ul>\n<li>提供动态表单生成能力，支持多字段、子列表和表格列表的配置。</li>\n<li>支持表单数据的动态渲染和交互。</li>\n<li>支持表单数据的动态校验和提交。</li>\n</ul>\n<h4>使用场景</h4>\n<ul>\n<li><strong>动态表单生成</strong>：根据配置快速生成表单，适用于需要动态调整表单字段的场景。</li>\n<li><strong>复杂表单结构</strong>：支持嵌套子列表和表格列表，适用于需要复杂数据结构的表单。</li>\n<li><strong>数据交互</strong>：支持表单数据的动态更新和提交，适用于需要实时交互的场景。</li>\n</ul>\n<h4>主要模块</h4>\n<ul>\n<li><strong>FieldList</strong>: 基础字段列表组件，适用于简单的表单生成。</li>\n<li><strong>MultiField</strong>: 多字段表单组件，适用于需要同时编辑多个字段的场景。</li>\n<li><strong>SubList</strong>: 子列表表单组件，适用于需要嵌套表单的场景。</li>\n<li><strong>TableList</strong>: 表格列表表单组件，适用于需要表格形式展示和编辑数据的场景。</li>\n</ul>`,\n    description: `补充和增强react-form功能`,\n    packageName: `@kne/react-form-plus`,\n    api: `<h4>FieldList</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fields</code></td>\n<td><code>Array&lt;Object&gt;</code></td>\n<td>表单字段配置数组</td>\n</tr>\n<tr>\n<td><code>onChange</code></td>\n<td><code>Function</code></td>\n<td>表单值变化回调</td>\n</tr>\n</tbody>\n</table>\n<h4>MultiField</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fields</code></td>\n<td><code>Array&lt;Object&gt;</code></td>\n<td>多字段配置数组</td>\n</tr>\n<tr>\n<td><code>onChange</code></td>\n<td><code>Function</code></td>\n<td>表单值变化回调</td>\n</tr>\n</tbody>\n</table>\n<h4>SubList</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fields</code></td>\n<td><code>Array&lt;Object&gt;</code></td>\n<td>子列表字段配置数组</td>\n</tr>\n<tr>\n<td><code>onChange</code></td>\n<td><code>Function</code></td>\n<td>表单值变化回调</td>\n</tr>\n</tbody>\n</table>\n<h4>TableList</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fields</code></td>\n<td><code>Array&lt;Object&gt;</code></td>\n<td>表格列表字段配置数组</td>\n</tr>\n<tr>\n<td><code>onChange</code></td>\n<td><code>Function</code></td>\n<td>表单值变化回调</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `react_form_plus_9cddd`,\n        style: `.react_form_plus_9cddd .table-list .ant-card-body {\n  padding: 0;\n}\n.react_form_plus_9cddd .table-list .react-form__field-label {\n  display: none;\n}\n.react_form_plus_9cddd .table-list .react-form__field {\n  margin-bottom: 0 !important;\n}\n.react_form_plus_9cddd .table-list .ant-row:not(:last-child) {\n  border-bottom: solid 1px var(--bg-color-grey-3);\n}\n.react_form_plus_9cddd .table-list .ant-row:hover {\n  background: var(--bg-color-grey-1) !important;\n}\n.react_form_plus_9cddd .table-list .ant-col {\n  padding: 16px;\n  width: var(--col-width);\n}\n.react_form_plus_9cddd .table-list .options {\n  flex-basis: 100px;\n}\n.react_form_plus_9cddd .table-list-header {\n  background: var(--bg-color-grey-1);\n}\n.react_form_plus_9cddd .table-list-header .is-req:before {\n  color: var(--color-warning);\n  content: \"*\";\n  position: static;\n  display: inline-block;\n  margin-right: 4px;\n  font-weight: bold;\n}\n.react_form_plus_9cddd .table-list-header :global .ant-col {\n  padding: 8px 16px;\n}`,\n        list: [{\n    title: `基础表单示例`,\n    description: `展示如何使用 FormInfo 和 Input 组件快速生成基础表单，支持字段校验和动态布局。`,\n    code: `const {default: FormInfo} = _ReactFormPlus;\nconst {default: Form, Input, TextArea} = ReactForm;\nconst {Row, Col} = antd;\n\nconst BaseExample = () => {\n    return <Form>\n        <FormInfo list={[<Input name=\"name\" label=\"名称\" rule=\"REQ\"/>, <Input name=\"field1\" label=\"字段1\" rule=\"REQ\"/>,\n            <Input name=\"field2\" label=\"字段2\" rule=\"REQ\"/>, <Input name=\"field3\" label=\"字段3\" rule=\"REQ\"/>,<TextArea name=\"description\" label=\"描述\" block/>]}\n                  itemRender={(children, props) => {\n                      return <Col span={props.span}>{children}</Col>;\n                  }}>{(children) => {\n            return <Row gutter={[24, 0]}>\n                {children}\n            </Row>\n        }}</FormInfo>\n    </Form>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_ReactFormPlus\",\n    packageName: \"@kne/current-lib_react-form-plus\",\n    component: component_1\n},{\n    name: \"ReactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_2\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_4\n}]\n},{\n    title: `子列表表单示例`,\n    description: `展示如何使用 SubList 组件实现嵌套表单结构，支持动态添加和删除子项。`,\n    code: `const {default: FormInfo, SubList} = _ReactFormPlus;\nconst {default: Form, Input, TextArea} = ReactForm;\nconst {Row, Col, Button, Card, Empty, Flex} = antd;\n\nconst BaseExample = () => {\n    return <Form debug>\n        <SubList title=\"列表\" itemTitle={({index}) => \\`项目\\${index + 1}\\`} empty={<Empty/>}\n                 list={[<Input name=\"name\" label=\"名称\" rule=\"REQ\"/>, <Input name=\"field1\" label=\"字段1\" rule=\"REQ\"/>,\n                     <Input name=\"field2\" label=\"字段2\" rule=\"REQ\"/>, <Input name=\"field3\" label=\"字段3\" rule=\"REQ\"/>,\n                     <TextArea name=\"description\" label=\"描述\" block/>]} listRender={({list, ...props}) => {\n            return <FormInfo list={list} itemRender={(children, props) => {\n                return <Col span={props.span}>{children}</Col>;\n            }} {...props}>{(children, {id, title, allowRemove, onRemove}) => {\n                return <Card bordered={false} title={title} size=\"small\"\n                             extra={allowRemove && <Button type=\"link\" danger onClick={onRemove}>删除</Button>}\n                             key={id}>\n                    <Row gutter={[24, 0]}>\n                        {children}\n                    </Row>\n                </Card>\n            }}</FormInfo>\n        }}>{(children, {title, allowAdd, onAdd}) => {\n            return <Card title={title} extra={allowAdd && <Button type=\"link\" onClick={onAdd}>添加</Button>}>\n                <Flex vertical gap={16}>\n                    {children}\n                </Flex>\n            </Card>\n        }}</SubList>\n    </Form>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_ReactFormPlus\",\n    packageName: \"@kne/current-lib_react-form-plus\",\n    component: component_1\n},{\n    name: \"ReactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_2\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_4\n}]\n},{\n    title: `多字段表单示例`,\n    description: `展示如何使用 MultiField 组件实现动态增减字段的功能，支持自定义布局和校验规则。`,\n    code: `const {default: FormInfo, MultiField} = _ReactFormPlus;\nconst {default: Form, Input, TextArea} = ReactForm;\nconst {Row, Col, Button, Flex} = antd;\n\nconst BaseExample = () => {\n    return <Form>\n        <FormInfo\n            list={[<MultiField name=\"name\" label=\"名称\" rule=\"REQ\" field={Input} block maxLength={3}\n                               itemRender={(children, {id, allowRemove, onRemove}) => {\n                                   return <Row key={id}>\n                                       <Col flex={1}>{children}</Col>\n                                       <Col><Button type=\"link\" disabled={!allowRemove} danger\n                                                    onClick={onRemove}>删除</Button></Col>\n                                   </Row>\n                               }}>{(children, {allowAdd, onAdd}) => {\n                return <div style={{marginBottom: 20}}>\n                    {children}\n                    <Flex justify=\"space-between\">\n                        <div></div>\n                        {allowAdd && <Button type=\"dashed\" onClick={onAdd}>添加</Button>}\n                    </Flex>\n                </div>\n            }}</MultiField>, <Input name=\"field1\" label=\"字段1\" rule=\"REQ\"/>,\n                <Input name=\"field2\" label=\"字段2\" rule=\"REQ\"/>, <TextArea name=\"description\" label=\"描述\" block/>]}\n            itemRender={(children, props) => {\n                return <Col span={props.span}>{children}</Col>;\n            }}>{(children) => {\n            return <Row gutter={[24, 0]}>\n                {children}\n            </Row>\n        }}</FormInfo>\n    </Form>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_ReactFormPlus\",\n    packageName: \"@kne/current-lib_react-form-plus\",\n    component: component_1\n},{\n    name: \"ReactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_2\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_4\n}]\n},{\n    title: `表格表单示例`,\n    description: `展示如何使用 TableList 组件实现表格布局的表单，支持动态添加和删除行。`,\n    code: `const {TableList} = _ReactFormPlus;\nconst {default: Form, Input, TextArea} = ReactForm;\nconst {Row, Col, Button, Card, Empty, Flex} = antd;\n\nconst BaseExample = () => {\n    return <Form>\n        <TableList title=\"表格表单\" className=\"table-list\" empty={<Empty/>} headerRender={(children, {width}) => {\n            return <Row className=\"table-list-header\" wrap={false} style={{\n                \"--col-width\": width,\n            }}>\n                {children}\n                <Col className=\"options\"></Col>\n            </Row>\n        }} headerItemRender={(children, {id, isReq}) => {\n            return <Col className={isReq ? \"is-req\" : \"\"} key={id}>{children}</Col>\n        }} itemRender={(children) => {\n            return <Col flex={1}>{children}</Col>;\n        }} listRender={(children, {id, width, onRemove, allowRemove}) => {\n            return <Row key={id} wrap={false} style={{\n                \"--col-width\": width,\n            }}>\n                {children}\n                <Col className=\"options\"><Button type=\"link\" onClick={onRemove} danger\n                                                 disabled={!allowRemove}>删除</Button></Col>\n            </Row>\n        }} list={[<Input name=\"name\" label=\"名称\" rule=\"REQ\"/>, <Input name=\"field1\" label=\"字段1\" rule=\"REQ\"/>,\n            <Input name=\"field2\" label=\"字段2\" />]}>{(children, {className, title, allowAdd, onAdd}) => {\n            return <Card className={className} title={title} extra={allowAdd && <Button type=\"link\" onClick={onAdd}>添加</Button>}>\n                {children}\n            </Card>\n        }}</TableList>\n    </Form>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_ReactFormPlus\",\n    packageName: \"@kne/current-lib_react-form-plus\",\n    component: component_1\n},{\n    name: \"ReactForm\",\n    packageName: \"@kne/react-form-antd\",\n    component: component_2\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_4\n}]\n}]\n    }\n};\nexport default readmeConfig;\n"],"names":["window","PUBLIC_URL","process","registry","url","tpl","ExampleRoutes","createEntry","_ref","globalPreset","props","_objectWithoutProperties","_excluded","_jsx","HashRouter","children","_objectSpread","paths","key","path","title","preset","themeToken","readme","pageProps","menu","root","ReactDOM","document","getElementById","async","ajax","createAjax","errorHandler","error","message","componentsCoreRemote","remote","defaultVersion","remoteLoaderPreset","remotes","default","fetchPreset","loading","Spin","delay","style","position","left","padding","transform","empty","Empty","transformResponse","response","data","code","msg","results","enums","apis","colorPrimary","globalInit","render","App","renderRoot","name","summary","description","packageName","api","example","isFull","className","list","scope","component"],"sourceRoot":""}